<div class="row">
  <% if params["hash"].to_s == "" %>
    <div class="col-md-12">
      <div class="alert alert-info">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
        <%= t('general.info').html_safe %>
      </div>
    </div>
  <% else
        if !flash[:warning].nil? 
          @show_response = false %>
          <div class="alert alert-warning"><%= flash.first.last.to_s %></div>
     <% end
     end %>
  <div class="col-md-12">
    <div>
      <ul class="nav nav-tabs" role="tablist">
        <li role="presentation" class="<%= (params['mode'].to_s!='advanced' && params['mode'].to_s!='verify') ? ' active' : '' %>"><a href="#basic" aria-controls="basic" role="tab" data-toggle="tab"><%= t('general.basic_tab') %></a></li>
        <li role="presentation" class="<%= params['mode'].to_s=='advanced' ? ' active' : '' %>"><a href="#advanced" aria-controls="advanced" role="tab" data-toggle="tab"><%= t('general.advanced_tab') %></a></li>
        <li role="presentation" class="<%= params['mode'].to_s=='verify' ? ' active' : '' %>"><a href="#verify" aria-controls="verify" role="tab" data-toggle="tab"><%= t('general.verify_tab') %></a></li>
      </ul>
      <div class="tab-content">
        <div role="tabpanel" class="tab-pane<%= (params['mode'].to_s!='advanced' && params['mode'].to_s!='verify') ? ' active' : '' %>" id="basic">
          <div class="col-md-6" style="margin-top: 15px;">
            <div id="drop-area">
              <form class="drag-form">
                <p><%= t('general.upload_info') %></p>
                <input type="file" id="fileElem" onchange="handleFiles(this.files[0])">
                <label class="button" for="fileElem"><%= t('general.select_file') %></label>
              </form>
              <progress id="progress-bar" max=100 value=0></progress><div id="hash-progress" style="display: none; margin: 0 5px; vertical-align: text-bottom;"><%= t('general.wait_hash') %></div>
            </div>
          </div>
          <div class="col-md-6" style="margin-top: 15px;">
            <div id="hash" style="margin: 7px; word-wrap: break-word;"></div>
            <%= form_with url: submit_path do |form| %>
              <%= form.hidden_field :hash_field, id:"hash_field" %>
              <%= form.button t('general.submit'), class: "btn btn-primary", style:"margin: 7px;", data: { "disable-with": t('general.wait') } %>
              <a href="/<%= I18n.locale.to_s %>" class="btn btn-default"><%= t('general.reset') %></a>
            <% end %>
            <% flash.each do |message_type, message| 
                  if message_type.to_s != "warning" %>
                      <div class="alert alert-<%= message_type %>"><%= message %></div>
               <% end
               end %>
          </div>
        </div>
        <div role="tabpanel" class="tab-pane<%= params['mode'].to_s=='advanced' ? ' active' : '' %>" id="advanced" style="padding: 10px;">
          <div class="row">
            <div class="col-md-6">
              <%= form_with url: submit_path do |form| %>
                <%= form.hidden_field :mode, value:"advanced" %>
                <div class="form-group">
                  <label class="col-xs-3 col-md-2 control-label" style="padding: 0;"><%= t('general.api_mode') %>:</label>
                  <div class="col-xs-9 col-md-10" style="margin-top: -7px; margin-bottom: 14px;">
                      <%= form.collection_select(:api_mode,
                              { t('general.mode.verify')   => "verify",
                                t('general.mode.default')  => "default" }, 
                              :last, :first, { selected: params[:operation] || "default" }, 
                              multiple: false, id: "api-mode", class: "selectpicker" ) %>
                  </div>
                </div>
                <div style="clear:both;"></div>
                <%= form.label :hash_advanced, t('general.hash_value') %>:<br>
                <%= form.text_area :hash_advanced, id: "hash_advanced", rows: "3", style:"width: 100%", value: params[:hash].to_s %><br>

                <% flash.each do |message_type, message| 
                      if message_type.to_s != "warning" %>
                          <div class="alert alert-<%= message_type %>"><%= message %></div>
                   <% end
                   end %>
                <%= form.button t('general.submit_advanced'), class: "btn btn-primary", style:"margin: 7px;", data: { "disable-with": t('general.wait') } %>
                <a href="/<%= I18n.locale.to_s %>" class="btn btn-default"><%= t('general.reset') %></a>
              <% end %>
            </div>
            <div class="col-md-6" style="padding: 0 15px;">
              <p><%= t('general.advanced_info') %></p>
              <strong><%= t('general.calc_hash') %></strong><br>
              <pre>cat file.dat | openssl dgst -sha256</pre>
              <strong><%= t('general.sign_calc_hash') %></strong><br>
              <pre>cat file.dat | \
    gpg --detach-sig -u your.email@provider.com | \ 
    openssl dgst -sha256</pre>
            </div>
          </div>
        </div>
        <div role="tabpanel" class="tab-pane<%= params[:mode].to_s=='verify' ? ' active' : '' %>" id="verify" style="padding: 10px;">
          <div class="row">
            <div class="col-md-12">
              <p><%= t('general.merkle_tab_intro') %></p>
              <%= form_with url: merkle_path do |form| %>
                <%= form.label :hash_field_merkle, t('general.hash_value_merkle') %><br>
                <%= form.text_field :hash_field_merkle, id: "hash_field_merkle", style:"width: 100%", value: @merkle_hash.to_s %><br>
                <%= form.label :audit_proof_merkle, t('general.audit_proof_merkle'), style: "margin-top: 15px;" %><br>
                <%= form.text_area :audit_proof_merkle, rows: "4", style:"width: 100%", value: @audit_proof_merkle.to_s %><br>
                <% if @root_node_merkle.to_s != "" %>
                    <p style="margin:15px 0 15px;"><strong><%= t('general.root_node_label') %>:</strong> <%= @root_node_merkle %></p>
                <% end %>
                <%= form.button t('general.calc_root'), class: "btn btn-primary", style:"margin: 7px;", data: { "disable-with": t('general.wait') } %>
                <a href="/<%= I18n.locale.to_s %>?mode=verify" class="btn btn-default"><%= t('general.reset') %></a>
              <% end %>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<% if @show_response %>
    <div class="row" style="margin-top: 20px;">
        <% if I18n.locale.to_s == "de" %>
            <div class="col-md-12">
                <% if @verify_only and @root_node.to_s == "" %>
                    Der Hashwert <code><%= params[:hash] %></code> wurde nicht gefunden.
                <% else %>
                    Informationen zu Hashwert <code><%= params[:hash] %></code>
                    <ul>
                        <li>wurde am <span id="oyd_ts"></span> auf dieser Webseite erstellt</li>
                        <% if @root_node.to_s == "" %>
                            <li>wird in ca. <%= @wait %> Stunden in <a href="https://de.wikipedia.org/wiki/Ethereum" target="_blank">Ethereum</a> gespeichert</li>
                        <% else %>
                            <li>wurde <% if @ether_ts.to_s != "" %>am <span id="ether_ts"></span><% end %> in <a href="https://de.wikipedia.org/wiki/Ethereum" target="_blank">Ethereum</a> gespeichert - <a class="collapsed" data-toggle="collapse" href="#hintBlockchain" aria-expanded="false" aria-controls="hintBlockchain">Anleitung zur Überprüfung</a>
                                <div id="hintBlockchain" class="panel-collapse collapse" aria-labelledby="hintBlockchain_text">
                                    <strong>So kannst du das Datum in der Ethereum Blockchain unabhängig überprüfen:</strong>
                                    <ol>
                                        <li>Erstelle von der Datei den Hashwert (<%= @hash %>) - zum Beispiel <a href="https://emn178.github.io/online-tools/sha256_checksum.html" target="_blank">hier</a></li>
                                        <li>Berechne mit dem Hashwert und den folgenden Werten den 
                                        <a href="https://de.wikipedia.org/wiki/Merkle-Baum" target="_blank">Merkle Wurzelknoten</a> wie in <a href="https://tools.ietf.org/html/rfc6962" target="_blank">RFC 6962</a> beschrieben:<br>
                                        <%= @audit_proof %></li>
                                        <li>überprüfe, ob der Merkle Wurzelknoten (<%= @root_node %>) in der Ethereum Blockchain an der folgenden Adresse 
                                        gespeichert ist: <%= @address[2..@address.length] %> (auf <a href="https://etherscan.io/tx/<%= @address %>" target="_blank">auf Etherscan.io anzeigen</a>)</li>
                                        <li>der in der Ethereum Blockchain an der angegebenen Adresse gespeicherte Zeitstempel ist der unabhängig verifizierte Zeitpunkt für die Existenz der Datei</li>
                                    </ol>
                                    <button onclick="window.print();" class="btn btn-default" style="margin-top: 10px;">
                                        <i class="fa fa-print" aria-hidden="true"></i>
                                        <%= t('general.print') %>
                                    </button>
                                    <p>&nbsp;</p>
                                </div>
                            </li>
                        <% end %>
                        <% if @tsr.to_s != "" %>
                            <li>wurde am <span id="tsr_ts"></span> mittels <a href="https://en.wikipedia.org/wiki/Trusted_timestamping" target="_blank">digitalem Zeitstempel</a> bestätigt - <a class="collapsed" data-toggle="collapse" href="#hintTSA" aria-expanded="false" aria-controls="hintTSA">Anleitung zur Überprüfung</a> | <%= link_to "Stempel ansehen", { controller: "pages", action: "read_tsr", hash: params[:hash].to_s }, data: { turbolinks: false } %>
                                <div id="hintTSA" class="panel-collapse collapse" aria-labelledby="hintTSA_text">
                                    <strong>So kannst du den digitalen Zeitstempel von <a href="https://freetsa.org" target="_blank">freetsa.org</a> selbst überprüfen:</strong>
                                    <ol>
                                        <li>lade <%= link_to "file.tsr", { controller: "pages", action: "tsr", hash: params[:hash].to_s } %>, <a href="https://freetsa.org/files/cacert.pem">cacert.pem</a> und <a href="https://freetsa.org/files/tsa.crt">tsa.crt</a> herunter</li>
                                        <li>führe folgenden Befehl im Verzeichnis mit den heruntergeladenen Dateien aus:<br>
                                            <pre>openssl ts -verify -data <(echo -n "<%= params[:hash] %>") \
                -in file.tsr -CAfile cacert.pem -untrusted tsa.crt</pre>
                                        </li>
                                    </ol>
                                </div>
                            </li>
                        <% end %>
                    </ul>
                <% end %>
            </div>
<script type="text/javascript">
  var ready;
  ready = function() {
    var options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
    $('#oyd_ts').html(new Date('<%= @oyd_ts %>').toLocaleTimeString('de-DE', options));
    $('#ether_ts').html(new Date('<%= @ether_ts %>').toLocaleTimeString('de-DE', options));
    $('#tsr_ts').html(new Date('<%= @tsr_ts %>').toLocaleTimeString('de-DE', options));
  }
  $(document).on('turbolinks:load', ready);
  $(document).ready(ready);

</script>
        <% else %>
            <div class="col-md-12">
                <% if @verify_only and @root_node.to_s == "" %>
                    The hash value <code><%= params[:hash] %></code> was not found.
                <% else %>
                    About hash value <code><%= params[:hash] %></code>
                    <ul>
                        <li>at <span id="oyd_ts"></span> the hash value was created on this website</li>
                        <% if @root_node.to_s == "" %>
                            <li>will be stored in about <%= @wait %> hours in <a href="https://en.wikipedia.org/wiki/Ethereum" target="_blank">Ethereum</a></li>
                        <% else %>
                            <li><% if @ether_ts.to_s != "" %>at <span id="ether_ts"></span><% end %> the hash value was stored in <a href="https://en.wikipedia.org/wiki/Ethereum" target="_blank">Ethereum</a> - <a class="collapsed" data-toggle="collapse" href="#hintBlockchain" aria-expanded="false" aria-controls="hintBlockchain">Instructions for verification</a>
                                <div id="hintBlockchain" class="panel-collapse collapse" aria-labelledby="hintBlockchain_text">
                                    <strong>How to independently check the date in Ethereum:</strong>
                                    <ol>
                                        <li>Create the hash value (<%= @hash %>) of the file - for example <a href="https://emn178.github.io/online-tools/sha256_checksum.html" target="_blank">here</a></li>
                                        <li>Use the hash value and the following hashes to calculate the <a href="https://en.wikipedia.org/wiki/Merkle_tree" target="_blank">Merkle root node</a> as described in <a href="https://tools.ietf.org/html/rfc6962" target="_blank">RFC 6962</a>:<br>
                                        <%= @audit_proof %></li>
                                        <li>Check if the Merkle root node (<%= @root_node %>) is stored in the Ethereum blockchain at the following address: <%= @address[2..@address.length] %> (auf <a href="https://etherscan.io/tx/<%= @address %>" target="_blank">show on Etherscan.io</a>)</li>
                                        <li>the timestamp stored in the Ethereum blockchain at the specified address is the independently verified time for the first upload of the file</li>
                                    </ol>
                                    <button onclick="window.print();" class="btn btn-default">
                                        <i class="fa fa-print" aria-hidden="true"></i>
                                        <%= t('general.print') %>
                                    </button>
                                    <p>&nbsp;</p>
                                </div>
                            </li>
                        <% end %>
                        <% if @tsr.to_s != "" %>
                            <li>at <span id="tsr_ts"></span> the hash value was digitally sigend with a <a href="https://en.wikipedia.org/wiki/Trusted_timestamping" target="_blank">trusted timestamp</a> - <a class="collapsed" data-toggle="collapse" href="#hintTSA" aria-expanded="false" aria-controls="hintTSA">Instructions for verification</a> | <%= link_to "view stamp", { controller: "pages", action: "read_tsr", hash: params[:hash].to_s }, data: { turbolinks: false } %>
                                <div id="hintTSA" class="panel-collapse collapse" aria-labelledby="hintTSA_text">
                                   <strong>How to verify the digital timestamp from <a href="https://freetsa.org" target="_blank">freetsa.org</a>:</strong>
                                    <ol>
                                        <li>download <%= link_to "file.tsr", { controller: "pages", action: "tsr", hash: params[:hash].to_s } %>, <a href="https://freetsa.org/files/cacert.pem">cacert.pem</a>, and <a href="https://freetsa.org/files/tsa.crt">tsa.crt</a></li>
                                        <li>run the following command in the folder with the downloaded files:<br>
                                            <pre>openssl ts -verify -data <(echo -n "<%= params[:hash] %>") \
    -in file.tsr -CAfile cacert.pem -untrusted tsa.crt</pre>
                                        </li>
                                    </ol>
                                </div>
                            </li>
                        <% end %>
                    </ul>
                <% end %>
            </div>
<script type="text/javascript">
  var ready;
  ready = function() {
    var options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
    $('#oyd_ts').html(new Date('<%= @oyd_ts %>').toLocaleTimeString('en-US', options));
    $('#ether_ts').html(new Date('<%= @ether_ts %>').toLocaleTimeString('en-US', options));
    $('#tsr_ts').html(new Date('<%= @tsr_ts %>').toLocaleTimeString('en-US', options));
  }
  $(document).on('turbolinks:load', ready);
  $(document).ready(ready);
</script>
        <% end %>
    </div>
<% end %>

<%= render 'pages/docs' %>

<script type="text/javascript">
    $('.selectpicker').selectpicker('refresh');
</script>

<script type="text/javascript">
// ************************ Drag and drop ***************** //
dropArea = document.getElementById("drop-area")

// Prevent default drag behaviors
;['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
  dropArea.addEventListener(eventName, preventDefaults, false)   
  document.body.addEventListener(eventName, preventDefaults, false)
})

// Highlight drop area when item is dragged over it
;['dragenter', 'dragover'].forEach(eventName => {
  dropArea.addEventListener(eventName, highlight, false)
})

;['dragleave', 'drop'].forEach(eventName => {
  dropArea.addEventListener(eventName, unhighlight, false)
})

// Handle dropped files
dropArea.addEventListener('drop', handleDrop, false);

function preventDefaults (e) {
  e.preventDefault()
  e.stopPropagation()
}

function highlight(e) {
  dropArea.classList.add('highlight')
}

function unhighlight(e) {
  dropArea.classList.remove('highlight')
}

function handleDrop(e) {
  console.log('here')
  var dt = e.dataTransfer;
  var file = dt.files[0];

  handleFiles(file);
}

let uploadProgress = []
let progressBar = document.getElementById('progress-bar')

function initializeProgress(numFiles) {
  progressBar.value = 0;
  uploadProgress = [];

  for(let i = numFiles; i > 0; i--) {
    uploadProgress.push(0);
  }
}

function updateProgress(fileNumber, percent) {
  uploadProgress[fileNumber] = percent;
  let total = uploadProgress.reduce((tot, curr) => tot + curr, 0) / uploadProgress.length;
  progressBar.value = total;
}

function handleFiles(file) {
  initializeProgress(1);
  hashFile(file);
}

function arrayBufferToWordArray(ab) {
  var i8a = new Uint8Array(ab);
  var a = [];
  for (var i = 0; i < i8a.length; i += 4) {
    a.push(i8a[i] << 24 | i8a[i + 1] << 16 | i8a[i + 2] << 8 | i8a[i + 3]);
  }
  return CryptoJS.lib.WordArray.create(a, i8a.length);
}

function hashCalcStart() {
  updateProgress(0, 100);
  document.getElementById('hash-progress').style.display ="inline";
};

function hashCalcEnd() {
  initializeProgress(1);
  document.getElementById('hash-progress').style.display ="none";
};

function hashFile(file) {
  // let textType = /text.*/;
  var reader = new FileReader();

  reader.onprogress = function(event) {
    if (event.lengthComputable) {
      updateProgress(0, (event.loaded * 100.0 / event.total) || 100);
    }
  };

  reader.onloadend = (function(theFile) {
    return function(evt) {
      hashCalcStart();
      setTimeout(function() {
        var arrayBuffer = evt.target.result;
        var hash = CryptoJS.SHA256(arrayBufferToWordArray(arrayBuffer));
        document.getElementById("hash").innerHTML = "<%= t('general.fingerprint_info') %>" + theFile.name + ": " + hash;
        document.getElementById("hash_field").value = hash;
        document.getElementById("hash_advanced").value = hash;
        document.getElementById("hash_field_merkle").value = hash;
        hashCalcEnd();
      }, 100);
    };

  })(file);
  reader.onerror = function(e) {
    console.error(e);
  };
  reader.readAsArrayBuffer(file);
};


</script>
